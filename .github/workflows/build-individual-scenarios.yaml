name: Build individual scenarios

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

env:
  ARTIFACT_RETENTION_DAYS: 1
  IMAGEMAGICK_URL: https://github.com/ImageMagick/ImageMagick/releases/download/7.1.1-46/ImageMagick-8209e84-gcc-x86_64.AppImage

jobs:
  find_scenarios:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find_scenarios.outputs.matrix }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      - name: Find scenarios
        id: find_scenarios
        run: |
          # SCENARIOS=$(find clash coops campaigns -type f -name "*tex" -not -regex ".*main.*" -exec basename -s .tex {} \;)
          SCENARIOS=$(find clash -type f -name "*tex" -not -regex ".*main.*" -exec basename -s .tex {} \;)
          echo "matrix=$(echo "$SCENARIOS" | jq -R -s -c 'split("\n") | map(select(length > 0)) as $scenarios | ["en", "pl"] as $languages | [$scenarios[] | . as $scenario | $languages[] | {scenario: $scenario, language: .}] | {include: .}')" >> $GITHUB_OUTPUT

  build_scenarios:
    runs-on: ubuntu-latest
    needs: find_scenarios
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_scenarios.outputs.matrix) }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      # - name: Cache built PDF
      #   uses: actions/cache@v4
      #   if: github.event_name == 'pull_request'
      #   id: cache-pdf
      #   with:
      #     path: |
      #       ./main_${{ matrix.language }}.pdf
      #     key: >-
      #       pdf-${{ matrix.language }}-${{
      #       matrix.language == 'en'
      #       && hashFiles('main_en.tex', 'metadata.tex', 'structure.tex', 'campaigns/*.tex', 'coops/*.tex', 'clash/*.tex', 'sections/*.tex', 'assets/**/*')
      #       || hashFiles('main_${{ matrix.language }}.tex', 'metadata.tex', 'structure.tex', format('**/{0}/*.tex', matrix.language), 'assets/**/*')
      #       }}
      #     restore-keys: |
      #       pdf-${{ matrix.language }}-

      - name: Cache Inkscape artifacts
        if: steps.cache-pdf.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ./svg-inkscape
          key: >-
            inkscape-${{ hashFiles('assets/glyphs/*') }}
          restore-keys: |
            inkscape-

      # - name: Cache LaTeX build
      #   if: steps.cache-pdf.outputs.cache-hit != 'true'
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ./main_${{ matrix.language }}.aux
      #       ./main_${{ matrix.language }}.fdb_latexmk
      #       ./main_${{ matrix.language }}.fls
      #       ./main_${{ matrix.language }}.out
      #       ./main_${{ matrix.language }}.toc
      #       ./campaigns/*.aux
      #       ./coops/*.aux
      #       ./clash/*.aux
      #       ./sections/**/*.aux
      #     key: >-
      #       texlive-mission-${{ matrix.language }}-${{
      #       matrix.language == 'en'
      #       && hashFiles('main_en.tex', 'metadata.tex', 'structure.tex', 'campaigns/*.tex', 'coops/*.tex', 'clash/*.tex', 'sections/*.tex', 'assets/**/*')
      #       || hashFiles('main_${{ matrix.language }}.tex', 'metadata.tex', 'structure.tex', format('**/{0}/*.tex', matrix.language), 'assets/**/*')
      #       }}
      #     restore-keys: |
      #       texlive-mission-${{ matrix.language }}-
      #
      - name: Adjust document structure
        run: |
          echo ${{ matrix.scenario }}
          tools/_find_scenario.sh ${{ matrix.scenario }}

      - name: Compile scenario
        # if: steps.cache-pdf.outputs.cache-hit != 'true'
        uses: xu-cheng/latex-action@v3
        with:
          extra_system_packages: "inkscape"
          latexmk_use_lualatex: true
          latexmk_shell_escape: true
          pre_compile: export HOMM3_GITHUB_BUILD=1
          root_file: main_${{ matrix.language }}.tex

      - name: Optimize PDF
        if: steps.cache-pdf.outputs.cache-hit != 'true'
        id: optimize
        uses: qwrtln/optimize-pdf@v1
        with:
          file-name: main_${{ matrix.language }}.pdf
          quality-level: prepress
          output-file: ${{ matrix.scenario }}_${{ matrix.language }}.pdf

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.scenario }}_${{ matrix.language }}
          path: ${{ matrix.scenario }}_${{ matrix.language }}.pdf
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
