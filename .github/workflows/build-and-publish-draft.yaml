name: Build and Publish Drafts

on:
  push:
    branches:
      - main
    paths:
      - 'draft-scenarios/**'
  pull_request:
    branches: [main]
    paths:
      - 'draft-scenarios/**'

env:
  ARTIFACT_RETENTION_DAYS: 1
  GHOSTSCRIPT_URL: https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs10030/gs_10.03.0_amd64_snap.tgz
  IMAGEMAGICK_URL: https://github.com/ImageMagick/ImageMagick/releases/download/7.1.1-46/ImageMagick-8209e84-gcc-x86_64.AppImage
  PO4A_GH_URL: https://github.com/mquinson/po4a/releases/download
  PO4A_VERSION: "0.73"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: draft-scenarios

    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      - name: Compile draft book
        uses: xu-cheng/latex-action@v3
        with:
          extra_system_packages: "inkscape"
          latexmk_use_lualatex: true
          latexmk_shell_escape: true
          pre_compile: cd draft-scenarios && export HOMM3_GITHUB_BUILD=1
          root_file: drafts.tex

      - name: Install ghostscript
        run: |
          wget --quiet ${{ env.GHOSTSCRIPT_URL }}
          tar -xvf *_amd64_snap.tgz
          sudo snap install ./*_amd64_snap/*_amd64.snap --devmode

      - name: Optimize PDF
        run: |
          du -sh drafts.pdf
          gs -o drafts_optimized.pdf \
            -sDEVICE=pdfwrite \
            -dCompatibilityLevel=1.5 \
            -dPDFSETTINGS=/prepress \
            -dDetectDuplicateImages=true \
            drafts.pdf
          mv drafts_optimized.pdf drafts.pdf
          du -sh drafts.pdf

      - uses: actions/upload-artifact@v4
        with:
          name: drafts
          path: draft-scenarios/drafts.pdf
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}


  find_draft_map_files:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      - name: Find map files
        id: set-matrix
        run: |
          IMAGES=$(find draft-scenarios -name "*tex" -exec grep -Po "maps[^}]*\.png" '{}' \; | sort | uniq | sed 's|maps/||')
          echo $IMAGES
          echo "matrix=$(echo "$IMAGES" | jq -R -s -c 'split("\n") | map(select(length > 0)) | {map: .}')" >> $GITHUB_OUTPUT


  make_draft_maps_monochrome:
    needs: [find_draft_map_files]
    runs-on: ubuntu-latest
    name: Convert ${{ matrix.map }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_draft_map_files.outputs.matrix) }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      - name: Install magick
        run: |
          sudo add-apt-repository universe
          sudo apt-get install -qq -y --no-install-recommends libfuse2t64  # FUSE is required for GH runners to run AppImages
          # apt has v6, while v7 is required, hence downloading AppImage
          wget --quiet ${{ env.IMAGEMAGICK_URL }}
          find . -name "ImageMagick*" -exec chmod +x '{}' \; -exec mv '{}' /usr/local/bin/magick \;

      - name: Process map file
        run: tools/to_monochrome.sh "assets/maps/${{ matrix.map }}"

      - name: Upload processed file
        uses: actions/upload-artifact@v4
        with:
          name: monochrome-map-${{ hashFiles(format('assets/maps/{0}', matrix.map)) }}
          path: assets/maps/${{ matrix.map }}
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  build_draft_monochrome:
    needs: [make_draft_maps_monochrome]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: draft-scenarios

    steps:
      - name: Set up repository
        uses: actions/checkout@v4

      - name: Download monochrome maps
        uses: actions/download-artifact@v4
        with:
          pattern: monochrome-map-*
          path: assets
          merge-multiple: true

      - name: Compile monochrome draft book
        uses: xu-cheng/latex-action@v3
        with:
          extra_system_packages: "inkscape"
          latexmk_use_lualatex: true
          latexmk_shell_escape: true
          pre_compile: cd draft-scenarios && export HOMM3_GITHUB_BUILD=1 HOMM3_NO_ART_BACKGROUND=1
          root_file: drafts.tex

      - name: Install ghostscript
        run: |
          wget --quiet ${{ env.GHOSTSCRIPT_URL }}
          tar -xvf *_amd64_snap.tgz
          sudo snap install ./*_amd64_snap/*_amd64.snap --devmode

      - name: Optimize PDF
        run: |
          du -sh drafts.pdf
          gs -o drafts_optimized.pdf \
            -sDEVICE=pdfwrite \
            -dCompatibilityLevel=1.5 \
            -dPDFSETTINGS=/prepress \
            -dDetectDuplicateImages=true \
            drafts.pdf
          mv drafts_optimized.pdf drafts.pdf
          du -sh drafts.pdf

      - name: Move file
        run:  mv drafts.pdf drafts-mono.pdf

      - uses: actions/upload-artifact@v4
        with:
          name: drafts-mono
          path: draft-scenarios/drafts-mono.pdf
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  publish:
    runs-on: ubuntu-latest
    needs: [build, build_draft_monochrome]
    steps:
      - name: Create dir
        run: mkdir drafts

      - name: Download regular draft PDF
        uses: actions/download-artifact@v4
        with:
          pattern: drafts*
          path: drafts
          merge-multiple: true

      - name: Publish drafts in artifacts repository
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.SSH_DEPLOY_KEY_BUILD_ARTIFACTS }}
          external_repository: qwrtln/Homm3BG-mission-book-build-artifacts
          publish_branch: drafts
          publish_dir: ./draft-scenarios/drafts
          force_orphan: true

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: monochrome-map-*
